#!/usr/bin/env ruby

require 'logger'
require 'thor'

$LOAD_PATH << File.join(File.dirname(__FILE__), "..", "lib")

require 'buildbulb'

class BuildBulbCLI < Thor

    option :verbose, :type => :boolean, :default => false
    option :light, :type => :string, :default => 'BBEBB'
    option :address, :type => :string, :default => '0.0.0.0'
    option :port, :type => :numeric, :default => 4712
    option :projects, :type => :string, :default => 'projects.json'
    option :logfile, :type => :string
    desc "start", "Listen for status changes of projects and change the color of the light."
    def start()

        logger = options[:logfile] ? Logger.new(options[:logfile], 3) : Logger.new(STDOUT)
        logger.level = Logger::INFO
        if options[:verbose]
            logger.level = Logger::DEBUG
            LIFX::Config.logger.level = Logger::DEBUG
        end

        lifx = LIFX::Client.lan
        lifx.discover
        light_locator = BuildBulb::LightLocator.new(logger, options[:light], lifx)
        
        marshaller = BuildBulb::ProjectsFileMarshaller.new(logger, options[:projects])
        projects = BuildBulb::Projects.new(logger, marshaller)

        server = BuildBulb::Server.new(logger, options[:address], options[:port], projects, light_locator)
        server.listen_indefinitely()
    end

end

BuildBulbCLI.start(ARGV)
